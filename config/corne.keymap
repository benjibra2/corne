/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    macros {
        mac: mac {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp F &kp D &kp V &kp C &kp ENTER>;
            label = "MAC";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y    &kp U  &kp I      &kp O    &kp P      &kp BSPC
&kp LCTRL  &kp A  &kp S  &kp D     &kp F  &kp G        &kp H    &kp J  &kp K      &kp L    &kp SEMI   &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N    &kp M  &kp COMMA  &kp DOT  &kp SLASH  &kp ESC
                         &kp LGUI  &mo 1  &kp SPACE    &kp RET  &mo 2  &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp N1          &kp N2          &kp N3          &kp N4          &kp N5           &kp N6         &kp N7         &kp N8         &kp N9         &kp N0           &kp BSPC
&kp RG(X)  &kp RG(RS(V))   &kp RG(A)       &kp RG(V)       &kp RG(C)       &mac             &kp LEFT       &kp DOWN       &kp UP         &kp RIGHT      &rgb_ug RGB_SAI  &rgb_ug RGB_SAD
&kp LSHFT  &rgb_ug RGB_ON  &kp RG(RS(N5))  &kp RG(RS(N2))  &kp RG(RS(N3))  &kp RG(RC(Q))    &kp RA(RC(E))  &kp RA(RC(G))  &kp LA(LC(T))  &kp LA(LC(D))  &bt BT_SEL 0     &kp F3
                                           &kp LGUI        &trans          &kp SPACE        &kp RET        &mo 3          &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL            &kp AT              &kp HASH          &kp DLLR             &kp PRCNT          &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &kp RC(DOWN_ARROW)  &kp RC(LEFT_ARROW)  &kp RC(UP_ARROW)  &kp RC(RIGHT_ARROW)  &rgb_ug RGB_SAI    &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &rgb_ug RGB_HUI     &rgb_ug RGB_BRD     &rgb_ug RGB_BRI   &rgb_ug RGB_ON       &rgb_ug RGB_OFF    &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                                                   &kp LGUI          &trans               &kp SPACE          &kp RET    &trans     &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&trans           &trans           &trans           &trans           &trans           &trans             &trans  &trans  &trans  &trans        &trans        &trans
&rgb_ug RGB_TOG  &rgb_ug RGB_HUI  &rgb_ug RGB_HUD  &rgb_ug RGB_SAI  &rgb_ug RGB_SAD  &rgb_ug RGB_BRI    &trans  &trans  &trans  &trans        &trans        &trans
&trans           &trans           &trans           &trans           &rgb_ug RGB_TOG  &rgb_ug RGB_BRD    &trans  &trans  &trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_CLR_ALL
                                                   &trans           &trans           &trans             &trans  &trans  &trans
            >;
        };
    };
};
